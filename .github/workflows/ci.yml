name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Verificação de Código
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer, phpstan, phpcs
          coverage: pcov

      - name: Instalar dependências do Composer
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Executar PHPStan (Análise Estática)
        run: vendor/bin/phpstan analyse

      - name: Executar PHP_CodeSniffer (Verificação de Padrões)
        run: vendor/bin/phpcs

  build:
    name: Build dos Containers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Configurar Docker e Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Iniciar Docker Compose
        run: docker-compose up -d

  test:
    name: Execução dos Testes
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: bolos
          MYSQL_USER: alexandre
          MYSQL_PASSWORD: alexandre
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer
          coverage: pcov

      - name: Configurar variáveis de ambiente
        run: |
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=bolos" >> .env
          echo "DB_USERNAME=alexandre" >> .env
          echo "DB_PASSWORD=alexandre" >> .env

      - name: Instalar dependências do Composer
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Executar Migrations
        run: php artisan migrate --force

      - name: Executar Testes
        run: php artisan test

      - name: Upload Relatório de Cobertura
        uses: codecov/codecov-action@v3
        with:
          file: tests/coverage/clover.xml
